{"version":3,"sources":["components/Pokemon.js","components/PokeList.js","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Pokemon","props","src","url","alt","name","title","className","types","map","item","index","propsTypes","PropTypes","string","arrayOf","PokeList","pokemons","pokemon","id","array","Header","App","useState","apiPoke","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAGMA,EAAU,SAACC,GACf,OACE,qCACE,qBAAKC,IAAKD,EAAME,IAAKC,IAAKH,EAAMI,KAAMC,MAAOL,EAAMI,OACnD,oBAAIE,UAAU,cAAd,SAA6BN,EAAMI,OACnC,oBAAIE,UAAU,gBAAd,SACGN,EAAMO,MAAMC,KAAI,SAACC,EAAMC,GACtB,OACE,oBAAIJ,UAAU,eAAd,SACGG,GAD+BC,YAU9CX,EAAQY,WAAa,CACnBT,IAAKU,IAAUC,OACfT,KAAMQ,IAAUC,OAChBN,MAAOK,IAAUE,QAAQF,IAAUC,SAGtBd,QCtBTgB,EAAW,SAACf,GAChB,OACE,oBAAIM,UAAU,YAAd,SACGN,EAAMgB,SAASR,KAAI,SAACS,GACnB,OACE,oBAAIX,UAAU,cAAd,SAEE,cAAC,EAAD,eAAaW,KAFkBA,EAAQC,UAUnDH,EAASJ,WAAa,CACpBK,SAAUJ,IAAUO,OAGPJ,QClBAK,EAJA,WACb,OAAO,oBAAId,UAAU,QAAd,kCCcMe,G,MAXH,WAAO,IAAD,EACGC,mBAASC,GAArBP,EADS,oBAGhB,OACE,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUU,SAAUA,SCAXQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f2db3cea.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pokemon = (props) => {\n  return (\n    <>\n      <img src={props.url} alt={props.name} title={props.name} />\n      <h3 className=\"namePokemon\">{props.name}</h3>\n      <ul className=\"pokemonsTypes\">\n        {props.types.map((item, index) => {\n          return (\n            <li className=\"pokemonTypes\" key={index}>\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nPokemon.propsTypes = {\n  url: PropTypes.string,\n  name: PropTypes.string,\n  types: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Pokemon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Pokemon from './Pokemon';\n\nconst PokeList = (props) => {\n  return (\n    <ul className=\"pokemosUl\">\n      {props.pokemons.map((pokemon) => {\n        return (\n          <li className=\"pokemonList\" key={pokemon.id}>\n            {/* <Pokemon pokemon={pokemon} /> */}\n            <Pokemon {...pokemon} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nPokeList.propsTypes = {\n  pokemons: PropTypes.array,\n};\n\nexport default PokeList;\n","import React from 'react';\n\nconst Header = () => {\n  return <h1 className=\"title\">Mi lista de pokemon</h1>;\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport apiPoke from '../components/data/apiPoke.json';\nimport Pokelist from './PokeList';\nimport Header from './Header';\nimport './App.scss';\n\nconst App = () => {\n  const [pokemons] = useState(apiPoke);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Pokelist pokemons={pokemons} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}