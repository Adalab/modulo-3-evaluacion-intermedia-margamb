{"version":3,"sources":["components/Pokemon.js","components/PokeList.js","components/Header.js","components/Search.js","components/App.js","reportWebVitals.js","index.js"],"names":["Pokemon","props","onClick","handleFavorite","id","className","isFavorite","src","url","alt","name","title","types","map","item","index","propsTypes","PropTypes","string","arrayOf","PokeList","useState","favorites","setFavorites","clickFavId","console","log","parseInt","favIndex","findIndex","pokemonId","push","splice","pokemons","pokemon","includes","array","Header","Search","type","placeholder","value","search","onChange","ev","handleFiltered","target","App","apiPoke","allPokemons","searchTerm","setSearchTerm","pokemonsToDisplay","filter","toUpperCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAGMA,EAAU,SAACC,GAKf,OACE,sBACEC,QANuB,WACzBD,EAAME,eAAeF,EAAMG,KAMzBC,UAAWJ,EAAMK,WAAa,WAAa,GAF7C,UAIE,qBAAKC,IAAKN,EAAMO,IAAKC,IAAKR,EAAMS,KAAMC,MAAOV,EAAMS,OACnD,oBAAIL,UAAU,cAAd,SAA6BJ,EAAMS,OACnC,oBAAIL,UAAU,gBAAd,SACGJ,EAAMW,MAAMC,KAAI,SAACC,EAAMC,GACtB,OACE,oBAAIV,UAAU,eAAd,SACGS,GAD+BC,YAU9Cf,EAAQgB,WAAa,CACnBR,IAAKS,IAAUC,OACfR,KAAMO,IAAUC,OAChBN,MAAOK,IAAUE,QAAQF,IAAUC,SAGtBlB,QC7BToB,EAAW,SAACnB,GAAW,IAAD,EACQoB,mBAAS,IADjB,mBACnBC,EADmB,KACRC,EADQ,KAGpBpB,EAAiB,SAACqB,GACtBC,QAAQC,IAAI,iBAAkBF,GAC9BA,EAAaG,SAASH,GACtB,IAAMI,EAAWN,EAAUO,WACzB,SAACC,GAAD,OAAeA,IAAcN,MAEb,IAAdI,EACFN,EAAUS,KAAKP,GAEfF,EAAUU,OAAOJ,EAAU,GAE7BL,EAAa,YAAID,IACjBG,QAAQC,IAAI,oBAAqBJ,IAQnC,OACE,oBAAIjB,UAAU,YAAd,SACGJ,EAAMgC,SAASpB,KAAI,SAACqB,GACnB,OACE,oBAAI7B,UAAU,cAAd,SAEE,cAAC,EAAD,aACEC,YAZQF,EAYe8B,EAAQ9B,GAXzCqB,QAAQC,IAAI,aAActB,GACnBkB,EAAUa,SAAS/B,IAWhBD,eAAgBA,GACZ+B,KALyBA,EAAQ9B,IAT9B,IAACA,QAuBtBgB,EAASJ,WAAa,CACpBiB,SAAUhB,IAAUmB,OAGPhB,QC5CAiB,EAJA,WACb,OAAO,oBAAIhC,UAAU,QAAd,kCCkBMiC,EAnBA,SAACrC,GAKd,OACE,iCACE,4CACA,uBACEsC,KAAK,OACLnC,GAAG,OACHoC,YAAY,SACZC,MAAOxC,EAAMyC,OACbC,SAZgB,SAACC,GACrB3C,EAAM4C,eAAeD,EAAGE,OAAOL,cCyBpBM,G,MAtBH,SAAC9C,GAAW,IAAD,EACCoB,mBAAS2B,GAAxBC,EADc,sBAGe5B,mBAAS,IAHxB,mBAGd6B,EAHc,KAGFC,EAHE,KASfC,EAAoBH,EAAYI,QAAO,SAACnB,GAAD,OAC3CA,EAAQxB,KAAK4C,cAAcnB,SAASe,MAGtC,OACE,sBAAK7C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQwC,eAXW,SAACK,GACtBC,EAAcD,EAAWI,kBAWvB,cAAC,EAAD,CAAUrB,SAAUmB,SCZXG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cfd687c4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pokemon = (props) => {\n  const handleAddFavorites = () => {\n    props.handleFavorite(props.id);\n  };\n\n  return (\n    <div\n      onClick={handleAddFavorites}\n      className={props.isFavorite ? 'favorite' : ''}\n    >\n      <img src={props.url} alt={props.name} title={props.name} />\n      <h3 className=\"namePokemon\">{props.name}</h3>\n      <ul className=\"pokemonsTypes\">\n        {props.types.map((item, index) => {\n          return (\n            <li className=\"pokemonTypes\" key={index}>\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPokemon.propsTypes = {\n  url: PropTypes.string,\n  name: PropTypes.string,\n  types: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Pokemon;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Pokemon from './Pokemon';\n\nconst PokeList = (props) => {\n  const [favorites, setFavorites] = useState([]); //manejar estados q son arrays\n\n  const handleFavorite = (clickFavId) => {\n    console.log('handleFavorite', clickFavId);\n    clickFavId = parseInt(clickFavId);\n    const favIndex = favorites.findIndex(\n      (pokemonId) => pokemonId === clickFavId\n    );\n    if (favIndex === -1) {\n      favorites.push(clickFavId);\n    } else {\n      favorites.splice(favIndex, 1);\n    }\n    setFavorites([...favorites]);\n    console.log('Favorites set to ', favorites);\n  };\n\n  const isFavorite = (id) => {\n    console.log('isFavorite', id);\n    return favorites.includes(id);\n  };\n\n  return (\n    <ul className=\"pokemosUl\">\n      {props.pokemons.map((pokemon) => {\n        return (\n          <li className=\"pokemonList\" key={pokemon.id}>\n            {/* <Pokemon pokemon={pokemon} /> */}\n            <Pokemon\n              isFavorite={isFavorite(pokemon.id)}\n              handleFavorite={handleFavorite}\n              {...pokemon}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nPokeList.propsTypes = {\n  pokemons: PropTypes.array,\n};\n\nexport default PokeList;\n","import React from 'react';\n\nconst Header = () => {\n  return <h1 className=\"title\">Mi lista de pokemon</h1>;\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Search = (props) => {\n  const onInputChange = (ev) => {\n    props.handleFiltered(ev.target.value);\n  };\n\n  return (\n    <form>\n      <label>Search:</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        placeholder=\"Search\"\n        value={props.search}\n        onChange={onInputChange}\n      />\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useState } from 'react';\nimport apiPoke from '../components/data/apiPoke.json';\nimport Pokelist from './PokeList';\nimport Header from './Header';\nimport Search from './Search';\nimport './App.scss';\n\nconst App = (props) => {\n  const [allPokemons] = useState(apiPoke); //array\n\n  const [searchTerm, setSearchTerm] = useState(''); //'bulbasur',string\n\n  const handleFiltered = (searchTerm) => {\n    setSearchTerm(searchTerm.toUpperCase());\n  };\n\n  const pokemonsToDisplay = allPokemons.filter((pokemon) =>\n    pokemon.name.toUpperCase().includes(searchTerm)\n  );\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Search handleFiltered={handleFiltered} />\n      <Pokelist pokemons={pokemonsToDisplay} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}